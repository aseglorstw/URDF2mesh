laser_angle_offset: deg(0.0)
laser_time_offset: -0.01  # [ms]; Delay between capturing a laser scan and processing it in the ROS driver. If set correctly, two consecutive dynamic pointclouds do not "jump" or "rotate" against each other when the robot is still. May change (and need recalibration) after kernel upgrades or hassling with the laser ethernet wiring.

battery_min_voltage: 40.0
battery_warn_voltage: 42.0
battery_max_voltage: 50.4

# Name of the robot for High-Level Database purposes
actor_name: 'name_not_set___please_set_it_in_the_robot_yaml_file'

# GPIO service that cuts power to the motor drivers
tracks_reset_service_name: "gpio_set_sw_1"

# IMU serial port
mtig_node/device: "/dev/ttyS0"

rover:
  trackDistance: 0.397 # The distance between the centers of the two tracks [m]
  trackWheelRadius: 0.089 # Radius of the track wheels [m]
  trackLength: 0.5 # Distance between the track wheel axes [m]
  trackWidth: 0.097 # Width of the track [m]
  flipperLength: 0.33 # Distance between the track wheel center and the flipper extremity [m]
  flipperWidth: 0.04981 # Width of the flipper [m]
  flipperOffset: 0.193731547 # Angle offset between the angle reference axis and the symetry axis of the flipper [rad]
  flipperBeltThickness: 0.03 # Thickness of the belt of the flippers [m].
  referentialZ: 0.0705 # Robot referential coordinate center (referentialZ: distance to the ground) [m].
  robotWidthBody: 0.24093 # The width of the robot body [m]
  robotWidthTracks: 0.494 # trackDistance + trackWidth # The width of the robot including tracks [m]
  robotWidthFlippers: 0.594 # robotWidthTracks + 2.0 * flipperWidth # The width of the robot including tracks and flippers [m]
  vMax: 0.6 # Max translational speed [m/s]
  wMax: 3.02 # 2 * v_max / track_distance # Max rotational speed [rad/s]
  vMaxTravel: 0.3 # Max translational speed for standard travel [m/s]
  vMaxRun: 0.6 # Max translational speed for fast travel [m/s]
  wMaxTravel: 0.6 # value from old nifti_teleop # Max rotational speed for standard travel [m/s]
  wMaxRun: 1.24 # value from old nifti_teleop # Max rotational speed for fast travel [m/s]
  maxScanningSpeed: 1.20 # Maximum rotation speed of the Sick laser [rad/s]
  # since revision 2021
  robotLengthBody: 0.500170
  robotBodyShift: -0.12200
  bodyEdgeCurvature: 0.035

flipper_postures:  # cross-referenced in nifti_robot_driver_msgs/msg/FlippersPosture.msg
  - [deg(   0.0), deg(  0.0)] # FLAT
  - [deg(-165.0), deg(115.0)] # OBSERVATION
  - [deg( -45.0), deg( 10.0)] # CLIMB_FORWARD
  - [deg( -10.0), deg( 45.0)] # CLIMB_BACKWARD
  - [deg(  40.0), deg(-40.0)] # CONVEX_EDGE
  - [deg(-135.0), deg(135.0)] # CALIBRATION
  - [deg(-120.0), deg(120.0)] # INIT

# positions of the "fixed" parts of the robot that can be configured (top box, arm attach point, ...)
parts_config:
  # type of the robot (to be used in payload xacros)
  robot_type: 'nifti'
  # hardware revision of the robot body
  # 2010: NIFTi robot
  # 2014: TRADR robot
  # 2021: TRADR robot for SubT
  revision: 2010
  
  has_top_box: True
  # Distance from robot's back to top box' front panel. Default is the front-most position.
  top_box_j_x: 0.443 # top box is only configurable in the x direction

  has_sick_lidar: True
  laser_pitch: 0.0  # [rad]; pitch of the Sick lidar on its revolute joint (corrects tilted ground)
  has_ouster_lidar: False

  # Helps to filter out all clutter on the top of the robot
  big_collision_box_on_top: True
  big_collision_box_height: 0.5
  big_collision_box_width: 0.5
  big_collision_box_length: 0.65
  big_collision_box_x: -0.1
  
  has_battery_cover: False
  battery_cover_x: 0.225
  battery_cover_height: 0.032  # 0.067

  flipper_inflation_ratio: 2.0
  # Since laser does a really bad job in filtering the flippers out, we need to extend them a bit inwards. The outer outline of the flippers should still remain realistic.
  flipper_inward_enlargement: 0.037

  has_omnicam: True
  has_omnicam_sensor_mount: False
  has_omnicam_vras: False
  
  has_rear_sensor_item: False

  has_mote_deployer: False

  top_box_ant_lora_y: -0.1
  top_box_ant_lora_z: 0.08
  top_box_ant_lora_length: 0.11
  top_box_ant_lora_angle: 0.0

  top_box_ant_l_wifi_y: 0.047
  top_box_ant_l_wifi_z: 0.02
  top_box_ant_l_wifi_length: 0.13
  top_box_ant_l_wifi_angle: 0.0

  top_box_ant_r_wifi_y: -0.047
  top_box_ant_r_wifi_z: 0.02
  top_box_ant_r_wifi_length: 0.13
  top_box_ant_r_wifi_angle: 0.0

  # Mobilicom
  has_mobilicom: False
  mobilicom_is_lite: False
  mobilicom_shift_x: -0.02
  mobilicom_shift_y: 0.0
  mobilicom_shift_z: 0.08
  mobilicom_yaw: -0.91
  mobilicom_pitch: 0.0
  mobilicom_roll: 0.0
  mobilicom_antenna_l_rotation: -0.3
  mobilicom_antenna_l_tilt: 0.0
  mobilicom_antenna_r_rotation: 0.8
  mobilicom_antenna_r_tilt: 0.0
  mobilicom_antennas_length: 0.17
  mobilicom_parent_link: 'omnicam'
  mobilicom_has_antenna_box: True

  # GPS antenna
  has_gps_antenna: False
  gps_antenna_height: 0.4
  gps_antenna_radius: 0.03
  gps_antenna_disc_radius: 0.05

  ### UNUSED PAYLOAD ###

  has_flipper_touch_sensors: False

  has_axis_camera: False
  axis_x_offset: 0.059
  axis_y_offset: 0.08

  # PTU Xtion Thermo Sensor
  has_ptuxthermo: False
  ptuxthermo_x_offset: 0.20
  ptuxthermo_y_offset: 0.18

  # old realsense
  has_realsense: False
  #realsense_tilt: 0.5
  #realsense_shift_y: 0.05
  #realsense_upside_down: False

  # new realsense
  has_new_realsense: False
  has_realsense_d435: False
  realsense_tilt: -1.15
  realsense_shift_x: 0.00
  realsense_shift_y: 0.00
  realsense_shift_z: 0.00
  realsense_yaw: 0.628318530
  realsense_roll: 0.0
  realsense_holder_version: 1
  realsense_parent_link: 'omnicam'

  # T265
  has_realsense_t265: False
  t265_parent_link: 'rear_sensor_item'

  has_velodyne: False
  velodyne_x_offset: 0.41
  velodyne_yaw: -1.84

  # Jetson
  has_jetson: False
  jetson_shift_x: 0.515
  jetson_shift_y: 0.145
  jetson_yaw: 0.0
  jetson_version: 1

error_recovery:
  max_safe_pitch: deg(50.0)
  max_safe_roll: deg(35.0)
  dangerous_pitch: deg(40.0)
  dangerous_roll: deg(30.0)
  dangerous_pose_lin_limit: 0.1
  dangerous_pose_ang_limit: deg(5.0)
  allow_soft_reset: True
  allow_hard_reset: True
  stop_on_error: True
  allow_tipover_protection: True

viz:
  camera1394_driver:
    guid: ''
  lady_saw:
    camera_name_format: '_1232x1616_c%i'

# calibration of Ladybug omnicam sensors
# this parameter is processed by print_robot_model.py/dynamic_robot_model_server.py
omnicam_sensors_calib:
  transforms:
  - [0.042087, -0.001706, -0.000359, -0.500706, 0.499767, -0.499686, 0.499840, 'omnicam', 'camera_0']
  - [0.011469, -0.040128, -0.000086, -0.110544, 0.698795, -0.697954, 0.111021, 'omnicam', 'camera_1']
  - [-0.034854, -0.022887, 0.000521, -0.322930, -0.629737, 0.629997, 0.319768, 'omnicam', 'camera_2']
  - [-0.033204, 0.025729, 0.000217, -0.631192, -0.319196, 0.322546, 0.629027, 'omnicam', 'camera_3']
  - [0.014502, 0.038991, -0.000301, -0.702075, 0.111793, -0.109872, 0.694637, 'omnicam', 'camera_4']
  - [0.000402, -0.000922, 0.062128, 0.001613, -0.001059, -0.707499, 0.706711, 'omnicam', 'camera_5']

# these are 6DOF transforms that need some external calibration and connect parts of robot body or sensors
# this parameter is processed by print_robot_model.py/dynamic_robot_model_server.py
calibrated_joints:
  d435: [0.00, 0.00, 0.00, 0.0, 0.0, 0.0, 'realsense_holder_part2', 'camera_back_mounting_plane']
  t265: [0.00, 0.00, 0.29, 0.0, 0.0, -1.5758, 'rear_sensor_item', 't265_pose_frame']
  ouster_holder: [0.05, 0.00, 0.00, 0.0, 0.0, 0.0, 'omnicam_top', 'ouster_holder']
  ouster_base: [0.00, 0.00, 0.00, 0.0, deg(15.0), 0.0, 'ouster_holder', 'ouster_base']
  ouster: [0.00, 0.00, 0.00, 0.0, 0.0, deg(30.0), 'ouster_base', 'os_sensor']

# these are 6DOF transforms that relate to the robot body, but do not connect any actual robot parts
# this parameter is processed by the tf_static_publisher launched by nifti_drivers_launchers/tf_static.launch
# WARNING: all numbers must be floats! 0 is not a float, 0.0 is!
tf_static_publisher:
  transforms: {}

mikrotik_switch:
  address: 'http://192.168.1.1/'
  username: 'admin'
  password: 'nifti'

bullet_api:
  address: 'https://192.168.1.20'  # overwrite for each robot
  username: 'robot'
  password: 'tradrtradr'
  rate: 0.1

inso_SamplingPeriod: 0.01  # inverse of /imu/data rate
inso_GyroscopeSF: '[1.11, 0, 0; 0, 1.09, 0; 0, 0, 1.097]'  # scaling factor of gyro measurements
