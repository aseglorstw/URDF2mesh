<?xml version="1.0" encoding="utf-8"?>

<!-- Load the NIFTi/TRADR robot model and launch the dynamic reconfigure server for it.
This launch file should be included every time you want to display/process the robot model. -->

<launch>
    <arg name="robot" default="" doc="Robot name, e.g. 'ctu', 'dfki' etc." />
    <arg name="run_dynamic_server" default="true" doc="Run the dynamic reconfigure server serving the robot model." />
    <arg name="xacro_file" default="$(dirname)/../urdf/nifti_robot.xacro" doc="xacro file with the robot model" />

    <arg name="load_yamls_as_params" default="true" doc="If true, the yaml files passed to this launch file are first loaded to param server." />
    <arg name="render_from_ros_params" default="false" doc="If true, the (static) robot model will be rendered from the parts_config/* params on param server, otherwise it will only use the YAML files." />

    <arg name="default_yaml_file" default="$(dirname)/../conf/robot/default-robot.yaml" doc="Common definitions. Arg is only used if its value is nonempty." />
    <arg name="robot_yaml_file" default="$(dirname)/../conf/robot/$(arg robot)-robot.yaml" if="$(eval arg('robot')!='')" doc="Robot-specific definitions. Arg is only used if its value is nonempty." />
    <arg name="robot_yaml_file" default="" if="$(eval arg('robot')=='')" doc="Robot-specific definitions. Arg is only used if its value is nonempty." />
    <arg name="yaml_file" default="$(dirname)/../conf/robot/robot.yaml" doc="Local modifications for each device. You must create it, but it can be empty. Arg is only used if its value is nonempty." />
    <arg name="additional_yaml_files" default="[]" doc="Additional YAML files passed to print_robot_model.py. This allows keeping the default YAMLs constructed from the previous three args and appending these to them." />
    <arg name="yaml_files" default="" doc="List of all config yaml files to load. If set, default_yaml_file, robot_yaml_file, yaml_file and load_yamls_as_params args are ignored." />
    <arg name="additional_args" default="" doc="Additional args passed to print_robot_model.py commandline" />

    <!-- Validate args -->

    <group if="$(eval arg('load_yamls_as_params') and arg('render_from_ros_params'))">
        <arg name="arg_validation" value="" />
        <arg name="arg_validation" value="load_yamls_as_params is incompatible with render_from_ros_params because the ROS params are not loaded early enough." /> <!-- triggers an error -->
    </group>

    <!-- Load YAML files to ROS param server -->

    <group if="$(arg load_yamls_as_params)">
        <rosparam command="load" file="$(arg default_yaml_file)" if="$(eval arg('default_yaml_file')!='')"/>
        <rosparam command="load" file="$(arg robot_yaml_file)" if="$(eval arg('robot_yaml_file')!='')"/>
        <rosparam command="load" file="$(arg yaml_file)" if="$(eval arg('yaml_file')!='')"/>
    </group>

    <!-- Set the robot model also in the non-dynamic parameter (in case dynamic server is not running). -->

    <arg name="default_yaml_file_arg" value="$(arg default_yaml_file)," if="$(eval arg('default_yaml_file')!='')"/>
    <arg name="default_yaml_file_arg" value="" unless="$(eval arg('default_yaml_file')!='')"/>
    <arg name="robot_yaml_file_arg" value="$(arg robot_yaml_file)," if="$(eval arg('robot_yaml_file')!='')"/>
    <arg name="robot_yaml_file_arg" value="" unless="$(eval arg('robot_yaml_file')!='')"/>
    <arg name="yaml_file_arg" value="$(arg yaml_file)," if="$(eval arg('yaml_file')!='')"/>
    <arg name="yaml_file_arg" value="" unless="$(eval arg('yaml_file')!='')"/>

    <arg name="yaml_files_arg" value="[$(arg default_yaml_file_arg)$(arg robot_yaml_file_arg)$(arg yaml_file_arg)]" if="$(eval len(arg('yaml_files')) == 0)" />
    <arg name="yaml_files_arg" value="$(arg yaml_files)" unless="$(eval len(arg('yaml_files')) == 0)" />

    <arg name="print_args" if="$(arg render_from_ros_params)"
         value="_use_yaml_files:=False _use_ros_params:=True"  />
    <arg name="print_args" unless="$(arg render_from_ros_params)"
         value="_use_yaml_files:=True  _use_ros_params:=False _yaml_files:=$(arg yaml_files_arg) _additional_yaml_files:=$(arg additional_yaml_files)" />
    <!-- This line is not actually needed, since the dynamic model server updates nifti_robot_description param
     on the fly. But it makes no harm to do it here just for sure, and as well you can take it as a template on how
     to load the robot model inside a parameter if you needed it for some reason (e.g. when replaying bag files,
     it makes no sense to run the reconfiguration server). -->
    <param name="nifti_robot_description" command="$(find nifti_robot_description)/scripts/print_robot_model.py _pretty_xml:=False _xacro_file:=$(arg xacro_file) $(arg print_args) $(arg additional_args)" />

    <!-- If your node needs to work with the robot model and it makes sense to trigger some reaction when the model
    changes (e.g. arm attached or so), please, get the model through a dynamic_reconfigure client. -->
    <include file="$(dirname)/dynamic_robot_model_server.launch" if="$(arg run_dynamic_server)" />
</launch>
